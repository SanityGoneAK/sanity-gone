---
import InterpunctSpacer from "../ui/InterpunctSpacer.astro";
import StarIcon from "../icons/StarIcon";
import OperatorBranchAndTrait from "../OperatorBranchAndTrait.tsx";
import { operatorClassIcon } from "../../utils/images";
import { professionToClass } from "../../utils/classes";
import { getMeleeOrRangedOrBoth } from "./helpers";

import * as classes from "./styles.css";

import type * as OutputTypes from "../../output-types";

interface Props {
	operator: OutputTypes.Character;
}

const { operator } = Astro.props;
const [baseName, alterName] = operator.name.split(/ the /i);
const operatorClass = professionToClass(operator.profession);
const rarity = operator.rarity as 1 | 2 | 3 | 4 | 5 | 6;
---

<div class="grid pt-6 pb-4 px-6 grid-">
	<h1 class={classes.name}>
		{baseName}
		{alterName && <span class={classes.alterName}>The {alterName}</span>}
	</h1>
	<div class={classes.rarityClassBranch}>
		<div class={classes.rarityClassBranchItem}>
			<span class="visually-hidden">Rarity: {rarity}</span>
			<span class={classes.rarityStars}>
        {
			Array(rarity)
				.fill(null)
				.map(() => <StarIcon rarity={rarity} />)
		}
      </span>
			{
				operator.isLimited && (
					<span class={classes.limitedText[rarity]}>Limited</span>
				)
			}
		</div>
		<div class={classes.rarityClassBranchItem}>
			<img
				class={classes.classBranchIcon}
				src={operatorClassIcon(operatorClass.toLowerCase())}
				alt=""
			/>
			<span>{operatorClass}</span>
		</div>
		<OperatorBranchAndTrait client:idle />
		<InterpunctSpacer />
		<span class={classes.position}
		>{getMeleeOrRangedOrBoth(operator.position, operator.description)}</span
		>
	</div>
</div>
