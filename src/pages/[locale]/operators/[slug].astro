---
import { slugify } from "~/utils/strings";
import operatorsJson from "data/en_US/operators.json";
import Layout from "~/layouts/Layout.astro";
import { operatorIdStore } from "./_store";
import CharacterSplash from "~/components/operator/CharacterSplash";
import SvgRarityGradientDefs from "~/components/operator/SvgRarityGradientDefs";
import OperatorTabs from "~/components/operator/OperatorTabs";

import { getRelatedCharacter } from "~/utils/related-character";

import type * as OutputTypes from "~/types/output-types";
import { operatorAvatar } from "~/utils/images";
import InterpunctSpacer from "~/components/ui/InterpunctSpacer.astro";
import OperatorInfo from "~/components/operator/OperatorInfo.astro";
import { getPathByLocale, getRelativeLocaleUrl } from "astro:i18n";
import { defaultLang } from "~/i18n/languages";
import { operatorSplash } from "~/utils/images.ts";

// console.log(Object.entries(operatorsJson)[0]);
//
// export function getStaticPaths() {
// 	return Object.entries(operatorsJson).map(([operatorId, operator]: [string, OutputTypes.Operator]) => {
// 		console.log(operatorId);
//
// 		return {
// 			params: {
// 				slug: slugify(operator.name.en_US),
// 			},
// 			props: { operatorId },
// 		};
// 	});
// }

const { slug } = Astro.params;
const locale = getPathByLocale(Astro.currentLocale ?? defaultLang);

const idLookup = Object.fromEntries(
	Object.entries(operatorsJson).map(
		// TODO: Fix this
		// @ts-ignore
		([operatorId, operator]: [string, OutputTypes.Operator]) => {
			return [slugify(operator.name), operatorId];
		}
	)
);

const operatorId = idLookup[slug ?? ""];
// console.log(operatorId);

const operator = operatorsJson[
	operatorId as keyof typeof operatorsJson
] as OutputTypes.Operator;
operatorIdStore.set(operatorId);

const relatedOperators = getRelatedCharacter(operator);
const e2skin = operator.skins.filter(
	(skin) => skin.type === "elite-one-or-two"
);
---

<script slot="head" define:vars={{ operatorId }}>
	window.operatorId = operatorId;
</script>

<Layout title={operator.name}>
	<div class="w-full h-full relative mx-auto flex gap-4 sm:p-5">
		<div
			class="absolute opacity-[0.075] top-0 left-0 right-0 bottom-0 h-full bg-[center_35%] before:absolute before:w-full before:h-full before:bg-[linear-gradient(180deg,_rgba(20,_20,_27,_0)_35%,_rgba(20,_20,_27,_0.75)_55%,_#14141B_100%)] -z-10"
			style={`background-image: url(${operatorSplash(e2skin[0].portraitId, e2skin[0].type)});`}
		>
		</div>
		<div class="flex flex-col gap-4">
			<ul class="p-0 m-0 flex items-center list-none gap-3 flex-none">
				<li class="text-base font-normal leading-normal">
					<a
						href={getRelativeLocaleUrl(locale, "/operators")}
						class="text-blue hover:underline">Operators</a
					>
				</li>
				/
				<li class="text-base font-bold leading-normal flex-none">
					{operator.name}
				</li>
				<li class="flex-grow"></li>
				{
					relatedOperators.length > 1 &&
						relatedOperators.map((relatedOperator) => {
							return (
								<li class="flex-none">
									<a
										class="flex items-center text-yellow relative mr-3"
										href={getRelativeLocaleUrl(
											locale,
											`/operators/${slugify(
												relatedOperator.name
											)}`
										)}
									>
										<img
											class="w-8 h-8 border border-solid border-neutral-200 rounded-[4.5rem] mr-2"
											src={operatorAvatar(
												relatedOperator.charId,
												1
											)}
										/>
										<span class="border-dashed border-b-[1px] border-neutral-200">
											{relatedOperator.name}
										</span>
									</a>
								</li>
							);
						})
				}
			</ul>
			<section class="flex-1">
				<CharacterSplash client:visible />
			</section>
			{/* below lies the remains of our old Operator Guide component */}
			<!--&lt;!&ndash; TODO: Make this a component? &ndash;&gt;-->
			<!--<a-->
			<!--	class="flex justify-center py-2 px-3 items-center gap-2 relative bg-gray rounded-[20px] border-2 border-transparent border-solid"-->
			<!--	style="background: linear-gradient(180deg, #14141B 0%, #191920 100%) padding-box, linear-gradient(180deg, #FED874 0%, #FFC397 100%) border-box;"-->
			<!--	href="#"-->
			<!--	><span-->
			<!--		class="leading-tight text-base text-transparent font-semibold bg-gradient-to-b from-[#FED874] to-orange-light bg-clip-text"-->
			<!--		>Operator Guide</span-->
			<!--	>-->
			<!--	<svg-->
			<!--		width="16"-->
			<!--		height="16"-->
			<!--		viewBox="0 0 16 16"-->
			<!--		fill="none"-->
			<!--		xmlns="http://www.w3.org/2000/svg"-->
			<!--	>-->
			<!--		<path-->
			<!--			d="M8 0C8 4.41828 4.41828 8 0 8C4.41828 8 8 11.5817 8 16C8 11.5817 11.5817 8 16 8C11.5817 8 8 4.41828 8 0Z"-->
			<!--			fill="url(#paint0_linear_4270_17189)"></path>-->
			<!--		<defs>-->
			<!--			<linearGradient-->
			<!--				id="paint0_linear_4270_17189"-->
			<!--				x1="8"-->
			<!--				y1="0"-->
			<!--				x2="8"-->
			<!--				y2="16"-->
			<!--				gradientUnits="userSpaceOnUse"-->
			<!--			>-->
			<!--				<stop stop-color="#FED874"></stop>-->
			<!--				<stop offset="1" stop-color="#FFC397"></stop>-->
			<!--			</linearGradient>-->
			<!--		</defs>-->
			<!--	</svg>-->
			<!--</a>-->
		</div>
		<div class="flex flex-col xl:flex-row rounded flex-none w-[590px]">
			<section
				class="flex-1 bg-gradient-to-b from-neutral-800 to-neutral-700 rounded-lg"
			>
				<OperatorInfo operator={operator} />
				<OperatorTabs client:visible />
			</section>
		</div>
	</div>
	<SvgRarityGradientDefs />
</Layout>
